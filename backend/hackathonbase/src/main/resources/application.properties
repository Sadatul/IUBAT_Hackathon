spring.application.name=hackathonbase
server.port=8080

logging.level.org.springframework=debug
logging.level.com.sadi.pinklifeline=debug

spring.datasource.url=jdbc:mysql://${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.flyway.enabled=true
#management.endpoints.web.exposure.include=prometheus

spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:authz.pub
spring.security.oauth2.resourceserver.jwt.audiences=hackathon

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=sadatulislamsadi@gmail.com
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

#verification.email.message must have a %s to put the verification code.
verification.email.message=Your verification code is %s and will expire in %d minutes
verification.email.subject=Confirmation
verification.email.timeout=600
verification.email.redis.prefix=hackathon:users:

#JWT encode uses this infos to generate jwt token
auth.jwt.audiences=hackathon
auth.jwt.issuer=self
auth.jwt.timeout=86400
auth.jwt.cookie.name=access_token
auth.jwt.refresh-token.cookie-name=refresh_token
auth.jwt.refresh-token.timeout=2592000

reset-password.prefix=reset:password
reset-password.timeout=10
reset-password.email.body=Click the link to reset password: %s/reset-password?email=%s&token=%s\nThe link will expire in %d minutes


cors.allowed-origins=${FRONTEND_HOST},${FRONTEND_HOST}/,http://localhost:3000,http://localhost:3000/
